# -*- coding: utf-8 -*-
"""MLjar (autoML library).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AfIjI_8drgZbRjXIfdpMuLxKi4InhWq0

[20 autoML ](https://medium.com/datadriveninvestor/20-automl-libraries-for-the-data-scientists-e591068dbc6b)

https://github.com/mljar/mljar-supervised

https://mljar.com/automl/
"""

pip install lightwood

pip install mljar-supervised

import numpy as np
import pandas as pd 
# scikit learn utilites
from sklearn.datasets import load_breast_cancer
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
# mljar-supervised package
from supervised.automl import AutoML

from google.colab import drive
drive.mount('/content/drive')

df = pd.read_csv('/content/drive/MyDrive/breast cancer datasets/DB1.csv')
# basic data preparation
X = np.array(df.drop(['class'], 1)) #input
#X = X.astype('float32')
y = np.array(df['class'])   #output
# integer encode
y = LabelEncoder().fit_transform(y)
# Look at the dataset again
print(f'Number of Rows: {df.shape[0]}')
print(f'Number of Columns: {df.shape[1]}')
print(df.head())

X_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.2, random_state=123)
# train models with AutoML
automl = AutoML(mode="Perform",eval_metric="accuracy")# explain_level=0,train_ensemble=True, golden_features=False,features_selection=False
automl.fit(X_train, y_train)

# compute the accuracy on test data
predictions = automl.predict_all(X_test)
print(predictions.head())
print("Test accuracy:", accuracy_score(y_test, predictions["label"].astype(int)))

print(predictions.head())
print(predictions.tail())
print(X_test.shape, predictions.shape)
print("LogLoss", log_loss(y_test, predictions["prediction_>50K"]))